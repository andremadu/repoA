name: Sync Files to RepoB

on:
  push:
    paths:
      - '**.txt'  

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repoA
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Traz pelo menos dois commits para comparação

      - name: Verificar histórico do repoA
        run: |
          commit_count=$(git rev-list --count HEAD)
          if [ "$commit_count" -lt 2 ]; then
            echo "RepoA tem apenas um commit. Nada para comparar."
            exit 0
          fi

      - name: Clone e sincronizar com repoB
        run: |
          # Captura os ficheiros .txt modificados entre os dois últimos commits
          changed_files=$(git diff --name-only HEAD^ HEAD -- '*.txt' || true)

          if [ -z "$changed_files" ]; then
            echo "Nenhum ficheiro .txt para sincronizar."
            exit 0
          fi

          echo "Ficheiros detectados para sincronização: $changed_files"
          
          # Clone repoB
          git clone https://andremadu:${{ secrets.GH_TOKEN }}@github.com/andremadu/repoB.git
          
          # Lista para rastrear alterações feitas
          alteracoes_feitas=false
          
          # Processa cada arquivo
          for file in $changed_files; do
            if [ -f "$file" ]; then
              # O arquivo existe no repoA, então devemos copiá-lo para repoB
              mkdir -p "repoB/$(dirname "$file")"
              cp "$file" "repoB/$file"
              echo "Copiado: $file"
              alteracoes_feitas=true
            else
              # O arquivo foi excluído no repoA, então devemos excluí-lo do repoB também
              if [ -f "repoB/$file" ]; then
                rm "repoB/$file"
                echo "Removido: $file (excluído no repoA)"
                alteracoes_feitas=true
              else
                echo "Arquivo não encontrado: $file (ignorando)"
              fi
            fi
          done

          # Configurar e fazer commit apenas se houver alterações
          if [ "$alteracoes_feitas" = true ]; then
            cd repoB
            git config user.name "andremadu"
            git config user.email "andremm2412@gmail.com"
            git add .
            
            if git diff --cached --quiet; then
              echo "Não há alterações para commit após processamento."
            else
              git commit -m "Sync files from repoA - atualizações e exclusões"
              git push origin main
              echo "Alterações sincronizadas com sucesso."
            fi
          else
            echo "Nenhuma alteração a ser sincronizada."
          fi
